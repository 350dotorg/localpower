from selenium import selenium
import unittest, time, re

class user_account_actions(unittest.TestCase):
    def setUp(self):
        self.verificationErrors = []
        self.selenium = selenium("localhost", 4444, "*chrome", "http://127.0.0.1:8000/")
        self.selenium.start()
    
    def test_user_account_actions(self):
        sel = self.selenium
        sel.open("/")
        sel.click("link=Sign Up")
        sel.wait_for_page_to_load("30000")
        sel.type("id_first_name", "New")
        sel.type("id_last_name", "User")
        sel.type("id_email", "newuser@example.com")
        sel.type("id_password1", "newuser")
        sel.type("id_password2", "newuser")
        sel.click("//input[@value='Register']")
        sel.wait_for_page_to_load("30000")
        sel.click("link=close")
        sel.click("link=Share on twitter")
        sel.click("link=link your account with Twitter")
        sel.wait_for_page_to_load("30000")
        sel.type("username_or_email", "test784382")
        sel.type("session[password]", "MdVlku6XK7uklFd")
        sel.click("allow")
        sel.wait_for_page_to_load("30000")
        for i in range(60):
            try:
                if sel.is_element_present("id_chart"): break
            except: pass
            time.sleep(1)
        else: self.fail("time out")
        sel.click("link=close")
        sel.click("link=Share on twitter")
        sel.click("//div[10]/div[11]/button")
        sel.click("link=close")
        sel.click("link=Actions")
        sel.wait_for_page_to_load("30000")
        sel.click("link=Wash your clothes in cold water")
        sel.type("id_comment", "I'm already doing this.")
        sel.click("id_submit")
        try: self.failUnless(sel.is_text_present("I'm already doing this."))
        except AssertionError, e: self.verificationErrors.append(str(e))
        try: self.failUnless(sel.is_text_present("Did you find this comment helpful"))
        except AssertionError, e: self.verificationErrors.append(str(e))
        sel.click("link=Blog")
        sel.click("//div[@id='major-col']/div/div[7]/h4/span/a")
        sel.type("id_comment", "I hope I can save money too!")
        sel.click("id_submit")
        sel.click("link=close")
        try: self.failUnless(sel.is_text_present("I hope I can save money too!"))
        except AssertionError, e: self.verificationErrors.append(str(e))
        try: self.failUnless(sel.is_text_present("Did you find this comment helpful?"))
        except AssertionError, e: self.verificationErrors.append(str(e))
        sel.click("link=Home")
        sel.click("invite_friend_link")
        sel.type("id_to_email", "notreal@email.com")
        sel.type("id_note", "Come check out this awesome new site.")
        sel.click("//div[10]/div[11]/button")
        sel.click("link=close")
        sel.click("house_party_link")
        sel.type("id_phone_number", "555-555-5555")
        sel.select("id_call_time", "label=Evening")
        sel.click("//option[@value='evening']")
        sel.click("//div[3]/button")
        sel.click("link=close")
        sel.click("link=Edit your profile")
        sel.click("link=Change your password")
        sel.type("id_old_password", "newuser")
        sel.type("id_new_password1", "usernew")
        sel.type("id_new_password2", "usernew")
        sel.click("//input[@value='Submit']")
        sel.click("link=close")
        sel.type("id_zipcode", "21202")
        sel.click("//form[@id='profile_edit_form']/div/p[5]")
        sel.select("id_building_type", "label=Apartment")
        sel.click("//input[@value='Save profile']")
        sel.click("link=close")
        sel.click("link=Home")
        sel.click("link=Edit your profile")
        sel.wait_for_page_to_load("30000")
        sel.click("link=unlink")
        sel.click("link=close")
        try: self.failUnless(sel.is_text_present("Link your account with twitter"))
        except AssertionError, e: self.verificationErrors.append(str(e))
        sel.click("link=Actions")
        sel.click("link=Insulate your water heater")
        sel.click("task_completed")
        sel.click("link=close")
        sel.click("//div[@id='major-col']/div[3]/form/div/input[1]")
        sel.click("link=close")
        sel.click("//div[@id='major-col']/div[4]/form/div/input[1]")
        sel.click("link=close")
        sel.click("link=Home")
        try: self.failUnless(sel.is_text_present("Completed Actions\n\nInsulate your water heater"))
        except AssertionError, e: self.verificationErrors.append(str(e))
        sel.click("link=Actions")
        sel.click("//div[@id='action_show']/div[2]/div[1]/a")
        sel.click("//div[@id='action_show']/div[2]/div[2]/form[1]/p/input")
        sel.click("link=close")
        sel.click("link=Home")
        try: self.failUnless(sel.is_text_present("In Progress Actions\n30 Points Replace your outdated refrigerator Appliances"))
        except AssertionError, e: self.verificationErrors.append(str(e))
        sel.click("link=Logout")
        sel.click("link=Login")
        sel.wait_for_page_to_load("30000")
        sel.type("id_email", "eric.buckley@climateprotect.org")
        sel.type("id_password", "m0GBfgvL5lWR3tDj")
        sel.click("//input[@value='Login']")
        sel.click("link=Admin")
        sel.click("link=Users")
        sel.type("searchbar", "newuser@example.com")
        sel.click("//input[@value='Search']")
        sel.click("link=Log in again")
        sel.wait_for_page_to_load("30000")
        sel.click("action-toggle")
        sel.select("action", "label=Delete selected users")
        sel.click("index")
        sel.wait_for_page_to_load("30000")
        sel.click("//input[@value=\"Yes, I'm sure\"]")
        sel.click("link=Log out")
    
    def tearDown(self):
        self.selenium.stop()
        self.assertEqual([], self.verificationErrors)

if __name__ == "__main__":
    unittest.main()
